digraph G
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node1 [label="{QUESO::Matrix\n|# m_env\l# m_map\l# m_printHorizontally\l# m_inDebugMode\l|+ Matrix() (3)\l+ ~Matrix()\l+ operator=()\l+ operator*=()\l+ operator+=()\l+ operator-=()\l+ env()\l+ map()\l+ numOfProcsForStorage()\l+ numRowsLocal()\l+ numRowsGlobal()\l+ numCols()\l+ chol()\l+ zeroLower()\l+ zeroUpper()\l+ print()\l+ setPrintHorizontally()\l+ getPrintHorizontally()\l+ setInDebugMode()\l+ getInDebugMode()\l# copy()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node2 [label="{QUESO::GslMatrix\n|- m_mat\l- m_LU\l- m_inverse\l- m_svdColMap\l- m_svdUmat\l- m_svdSvec\l- m_svdVmat\l- m_svdVTmat\l- m_determinant\l- m_lnDeterminant\l- m_permutation\l- m_signum\l- m_isSingular\l|+ GslMatrix() (6)\l+ ~GslMatrix()\l+ operator=()\l+ operator*=()\l+ operator/=()\l+ operator+=()\l+ operator-=()\l+ operator()(v)\l+ operator()()\l+ numRowsLocal()\l+ numRowsGlobal()\l+ numCols()\l+ max()\l+ rank()\l+ transpose()\l+ inverse()\l+ determinant()\l+ lnDeterminant()\l+ normFrob()\l+ normMax()\l+ chol()\l+ svd()\l+ svdMatU()\l+ svdMatV()\l+ svdSolve() (2)\l+ multiply()\l+ invertMultiply() (3) \l and 11 more...\l+ cwSet() (2)\l+ cwExtract()\l+ zeroLower()\l+ zeroUpper()\l+ filterSmallValues()\l+ filterLargeValues()\l+ fillWithTranspose()\l+ fillWithBlocksDiagonally()\l+ fillWithBlocksDiagonally()\land 5 more...\l+ data()\l+ mpiSum()\l+ matlabLinearInterpExtrap()\l+ print()\l+ subWriteContents()\l+ subReadContents()\l- copy()\l- resetLU()\l- multiply()\l- internalSvd()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_gsl_matrix_.html",tooltip=" for matrix operations using GSL library."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans"];
  Node3 [label="{QUESO::TeuchosMatrix\n|- m_mat\l- m_LU\l- m_inverse\l- m_svdColMap\l- m_svdUmat\l- m_svdSvec\l- m_svdVmat\l- m_svdVTmat\l- m_determinant\l- m_lnDeterminant\l- m_permutation\l- v_pivoting\l- m_signum\l- m_isSingular\l|+ TeuchosMatrix() (6)\l+ ~TeuchosMatrix()\l+ operator=()\l+ operator*=()\l+ operator/=()\l+ operator+=()\l+ operator-=()\l+ operator()()\l+ operator()()\l+ numRowsLocal()\l+ numRowsGlobal()\l+ numCols()\l+ values()\l+ stride()\l+ max()\l+ rank()\l+ transpose()\l+ inverse()\l+ determinant()\l+ lnDeterminant()\l+ normFrob()\l+ normMax()\l+ chol()\l+ svd()\l+ svdMatU()\l+ svdMatV()\l+ svdSolve() (2)\l+ multiply()\l+ invertMultiply() (3)\l and 5 more...\l+ cwSet() (2)\l+ getColumn() (2)\l+ setColumn()\l+ getRow() (2)\l setRow()\l+ zeroLower()\l+ zeroUpper()\land 10 more...\l+ mpiSum()\l+ matlabLinearInterpExtrap()\l+ print()\l+ subReadContents()\l+ subWriteContents()\l- copy()\l- resetLU()\l- multiply()\l- internalSvd()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_teuchos_matrix_.html",tooltip=" for matrix operations using Teuchos (Trilinos)."];
}
